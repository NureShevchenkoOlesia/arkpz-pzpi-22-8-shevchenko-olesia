Міністерство освіти і науки України
Харківський національний університет радіоелектроніки
Кафедра ПІ







Звіт з практичного завдання №2
з дисципліни «Аналіз та рефакторинг коду»






Перевірив:                                                                                    Виконала:
ст. викладач каф. ПІ                                                                  ст. гр. ПЗПІ-22-8 
Сокорчук І.П.                                                                             Шевченко О.О.







Харків 2024 
2.1 Тема роботи
Методи рефакторингу коду програмного забезпечення.
2.2 Мета роботи 
Навчитися основним методам рефакторингу коду на основі реальних прикладів з їхніх власних програмних проєктів. Навчитися ідентифікувати проблеми в коді та використовувати відповідні методи рефакторингу для покращення його якості.
	2.3 Хід роботи
	Описати обрані методи рефакторингу з книги Мартина Фаулера [1] та виявити переваги їх використання. Підготувати презентацію та розмістити слайди у додатку А.
	2.3.1 Replace Comment with Method     
Метод «Заміна коментаря методом» полягає в тому, щоб замінити детальний коментар, який пояснює певний фрагмент коду, на добре названий метод. Ідея в тому, що сам метод має бути достатньо описовим, щоб пояснювати, що відбувається, без додаткових пояснень у коментарях. 
Код до рефакторингу:
Код містить коментарі, які пояснюють, що робить певна частина коду. Однак, на практиці, ці коментарі можуть бути зайвими або швидко застарівати.
1   public class Order
2  {
3 	public double price;
4    	public double CalculateTotal()
5    	{
6      		 // Calculate the total price with tax
7       		 double tax = price * 0.2;
8        		 return price + tax;
9    	}
10  }
Код після рефакторингу:
Після застосування методу код став більше читабельним, масштабованим та легким для тестування. 
 
1   public class Order
2  {
3		public double price;
4		public double CalculateTotal()
5		{
6			return CalculateTotalPriceWithTax(price);
7		}
8		private double CalculateTotalPriceWithTax(double price)
9		{
10		double tax = price * 0.2;
11		return price + tax;
12 	}
	13  }
 

2.3.2 Eliminate Unused Code
Метод «Видалення невикористовуваного коду» передбачає пошук і видалення частин коду, які більше не використовуються або не виконують корисної функції в програмі. 
Код до рефакторингу:
У коді є частини, які більше не використовуються, та код, який виконується, але не має жодного ефекту. 
 
1  public class Order
2  {
3	public double price;
4	public double discount;
5	public double CalculateTotal()
6	{
7		double tax = price * 0.2;
8		double total = price + tax;
9		// Старі обчислення, які більше не актуальні
10		double unusedDiscount = discount * 0.1;
11		return total;
12	}
13  }
 
Код після рефакторингу:
Після застосування методу код став зрозумілішим, легкішим для підтримки та продуктивнішим. 
1   public class Order
2  {
3	  public double price;
4	  public double CalculateTotal()
5	  {
6 	  	  double tax = price * 0.2;
7	 	  return price + tax;
8	   }
9  }

2.3.3 Rename Variables
Метод «Перейменування змінних» спрямований на покращення зрозумілості коду шляхом використання більш описових імен змінних.
Код до рефакторингу:
Змінні з незрозумілими та загальними іменами ускладнюють розуміння коду, особливо коли він стає комплексним.
1  public class Order
2  {
3	public double a;
4	public double b;
5	public double CalculateTotal()
6	{
7		double tax = a * 0.2;
8	 	return a + tax + b;
9	 }
10  }
Код після рефакторингу:
Після застосування методу код став більше читабельним, зрозумілим та легкішим для підтримки. 
1  public class Order
2  {
3	public double price;
4	public double discount;
5	public double CalculateTotal()
6	{
7	 	double tax = price * 0.2;
8	 	return price + tax + discount;
9	}
10  }

Висновки: 
Під час виконання практичної роботи було вивчено основні методи рефакторингу коду на основі реальних прикладів з їхніх власних програмних проєктів. Вивчено, як ідентифікувати проблеми в коді та використовувати відповідні методи рефакторингу для покращення його якості.
Посилання на відеозапис: https://youtu.be/URoX2xrgQ-g?feature=shared 
 
Список використаних джерел:
1.	Refactoring Home Page. Refactoring. URL: Link: (date of access: 30.11.2024). 
2.	Martin Fowler. Refactoring. Improving the Design of Existing Code– Addison-Wesley Professional, 1999.
3.	Contieri M. Refactoring 005 – Replace Comment with Function Name. Medium. URL: Link:(date of access: 30.11.2024).


 
Додаток А


 
Рисунок А.1 – Титульний слайд презентації

 
Рисунок А.2 – Зміст презентації

 
Рисунок А.3 – Визначення рефакторингу коду

 
Рисунок А.4 – Призначення обраних методів

 
Рисунок А.5 – Метод «Заміна коментаря методом»: неправильний код

 
Рисунок А.6 – Метод «Заміна коментаря методом»: правильний код
 
Рисунок А.7 – Метод «Видалення невикористовуваного коду»: неправильний код

 
Рисунок А.8 – Метод «Видалення невикористовуваного коду»: правильний код

 
Рисунок А.9 – Метод «Перейменування змінних»: неправильний код

 
Рисунок А.10 – Метод «Перейменування змінних»: правильний код

 
Рисунок А.11 – Висновки щодо рефакторингу коду

 
Рисунок А.12 – Список використаних джерел
